- content_for :heading_descriptor do
  %em #{@task.service}

- @bg_class = "bg-green"

- if task.cancelled?
  #prompt.alert.alert-info
    Task Cancelled
    - if worklog = WorkLog.for(task)
      by #{worklog.actioned_by}
      on #{worklog.created_at}.

- elsif task.referred?
  #prompt.alert.alert-warning
    Task Referred
    - if worklog = WorkLog.for(task)
      by #{worklog.actioned_by}
      on #{worklog.created_at}.
    Next action due by #{ task.referred_until }.


= render partial: "submissions/info/base", locals: { submission: submission, task: task}

= yield :task_body

- if @task.actionable? && !current_user.read_only?
  .row.no-print#actions
    .col-xs-12
      - if @task.claimant == current_user
        - if @task.referrable?
          / refer button and modal
          = render partial: "submission/tasks/modals/refer", locals: { submission: @submission }
          = link_to submission_task_notification_path(@submission, @task, template: :refer),
            data: { target: "#refer-task", toggle: "modal" },
            class: "btn btn-warning btn-refer-submission",
            remote: true do
            %i.fa.fa-pause
            Refer Task

        / cancel button and modal
        = render partial: "submission/tasks/modals/cancel", locals: { submission: @submission }
        = link_to submission_task_notification_path(@submission, @task, template: :cancel),
                  data: { target: "#cancel-task", toggle: "modal" },
                  class: "btn btn-link",
                  remote: true do
          %i.fa.fa-trash
          Cancel Task

      - elsif @task.referred?
        = form_tag claim_referral_submission_task_path(@submission, @task) do
          = submit_tag "Reclaim Referral", class: "btn btn-success"

      - unless @readonly
        = yield :submission_save_buttons
